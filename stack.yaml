# This file was automatically generated by 'stack init'
#
# Some commonly used options have been documented as comments in this file.
# For advanced use and comprehensive documentation of the format, please see:
# https://docs.haskellstack.org/en/stable/yaml_configuration/

# Resolver to choose a 'specific' stackage snapshot or a compiler version.
# A snapshot resolver dictates the compiler version and the set of packages
# to be used for project dependencies. For example:
#
# resolver: lts-3.5
# resolver: nightly-2015-09-21
# resolver: ghc-7.10.2
#
# The location of a snapshot can be provided as a file or url. Stack assumes
# a snapshot provided as a file might change, whereas a url resource does not.
#
# resolver: ./custom-snapshot.yaml
# resolver: https://example.com/snapshots/2018-01-01.yaml
resolver:
 url: https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/lts/15/2.yaml
#  url: https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/lts/14/17.yaml
#  url: https://raw.githubusercontent.com/commercialhaskell/stackage-snapshots/master/lts/16/25.yaml


# User packages to be built.
# Various formats can be used as shown in the example below.
#
# packages:
# - some-directory
# - https://example.com/foo/bar/baz-0.0.2.tar.gz
#   subdirs:
#   - auto-update
#   - wai
packages:
- .
# - ../reflex-stack
# Dependency packages to be pulled from upstream that are not in the resolver.
# These entries can reference officially published versions as well as
# forks / in-progress versions pinned to a git hash. For example:
#
# extra-deps:
# - acme-missiles-0.3
# - git: https://github.com/commercialhaskell/stack.git
#   commit: e7b331f14bcffb8367cd58fbfc8b40ec7642100a
#
# extra-deps: []
extra-deps:
- reflex-0.8.0.0
- reflex-vty-0.1.4.1
- ref-tf-0.4.0.2
- constraints-extras-0.3.0.2
- patch-0.0.3.2
- dependent-map-0.4.0.0
- dependent-sum-0.7.1.0
#- some-1.0.1
- bimap-0.3.3
- monoidal-containers-0.6.0.1
- prim-uniq-0.2
- witherable-0.3.1


# Override default flag values for local packages and extra-deps
# flags: {}

# Extra package databases containing global packages
# extra-package-dbs: []

# Control whether we use the GHC we find on the path
# system-ghc: true
#
# Require a specific version of stack, using version ranges
# require-stack-version: -any # Default
# require-stack-version: ">=2.5"
#
# Override the architecture used by stack, especially useful on Windows
# arch: i386
# arch: x86_64
#
# Extra directories used by stack for building
# extra-include-dirs: [/path/to/dir]
# extra-lib-dirs: [/path/to/dir]
#
# Allow a newer minor version of GHC than the snapshot specifies
# compiler-check: newer-minor

#jhw: added this in attempt to get hie server running, but did not work.
#After addeing this: $ stack build
# -took forever to build, added tons of stuff to /home/heath/code/haskell/reflex-hello/.stack-work/install/x86_64-linux/...
# -but server still won't start in emacs. re-ran $ stack hoogle
# - which did another big hoogle build, perhaps doing a new derivation in /home/heath/code/haskell/reflex-hello/.stack-work/install/x86_64-linux/...
# *hie::stderr* : hie-wrapper couldn't find a HIE binary with a matching GHC version in your all-hies installation
#comment out for now, as will try to build with lst 15.2 which I know works with investingRIO
#ghc-options:
#  "$everything": -haddock

# added the following which is in investingRIO, where hie server works
#it loads a different ghc versio: $ nix/store/hp0mcayb6xizig9dy9vpl3rcyfczf397-ghc-8.6.5
#which then casues build failure: text-icu   > * Missing (or bad) C libraries: icuuc, icui18n, icudata
nix:
  enable: true
  packages: [glpk pcre zlib gmp glibc icu ]